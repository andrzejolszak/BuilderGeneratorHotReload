#nullable disable

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by BuilderGenerator at 2023-11-22T00:07:28 in 0.6171ms.
// </auto-generated>
//------------------------------------------------------------------------------
using System.CodeDom.Compiler;
using System;
using System.Collections.Generic;
using BuilderGenerator.IntegrationTests.Core.Models.Entities;

namespace BuilderGenerator.IntegrationTests.Net60.Builders
{
    public partial class OrderBuilder : BuilderGenerator.Builder<BuilderGenerator.IntegrationTests.Core.Models.Entities.Order>
    {
        public System.Lazy<System.DateTime> CreatedAt = new System.Lazy<System.DateTime>(() => default(System.DateTime));
        public System.Lazy<string> CreatedBy = new System.Lazy<string>(() => default(string));
        public System.Lazy<System.Guid> Id = new System.Lazy<System.Guid>(() => default(System.Guid));
        public System.Lazy<string> InternalString = new System.Lazy<string>(() => default(string));
        public System.Lazy<System.Collections.Generic.ICollection<BuilderGenerator.IntegrationTests.Core.Models.Entities.OrderItem>> Items = new System.Lazy<System.Collections.Generic.ICollection<BuilderGenerator.IntegrationTests.Core.Models.Entities.OrderItem>>(() => default(System.Collections.Generic.ICollection<BuilderGenerator.IntegrationTests.Core.Models.Entities.OrderItem>));
        public System.Lazy<System.DateTime> OrderDate = new System.Lazy<System.DateTime>(() => default(System.DateTime));
        public System.Lazy<System.Collections.Generic.ICollection<BuilderGenerator.IntegrationTests.Core.Models.Entities.OrderItem>> Orders = new System.Lazy<System.Collections.Generic.ICollection<BuilderGenerator.IntegrationTests.Core.Models.Entities.OrderItem>>(() => default(System.Collections.Generic.ICollection<BuilderGenerator.IntegrationTests.Core.Models.Entities.OrderItem>));
        public System.Lazy<BuilderGenerator.IntegrationTests.Core.Models.Enums.OrderStatus> Status = new System.Lazy<BuilderGenerator.IntegrationTests.Core.Models.Enums.OrderStatus>(() => default(BuilderGenerator.IntegrationTests.Core.Models.Enums.OrderStatus));
        public System.Lazy<System.DateTime> UpdatedAt = new System.Lazy<System.DateTime>(() => default(System.DateTime));
        public System.Lazy<string> UpdatedBy = new System.Lazy<string>(() => default(string));

        public override BuilderGenerator.IntegrationTests.Core.Models.Entities.Order Build()
        {
            if (Object?.IsValueCreated != true)
            {
                Object = new System.Lazy<BuilderGenerator.IntegrationTests.Core.Models.Entities.Order>(() =>
                {
                    var result = new BuilderGenerator.IntegrationTests.Core.Models.Entities.Order
                    {
                        CreatedAt = CreatedAt.Value,
                        CreatedBy = CreatedBy.Value,
                        Id = Id.Value,
                        InternalString = InternalString.Value,
                        Items = Items.Value,
                        OrderDate = OrderDate.Value,
                        Orders = Orders.Value,
                        Status = Status.Value,
                        UpdatedAt = UpdatedAt.Value,
                        UpdatedBy = UpdatedBy.Value,
                    };

                    return result;
                });

                PostProcess(Object.Value);
            }

            return Object.Value;
        }

        public OrderBuilder WithCreatedAt(System.DateTime value)
        {
            return WithCreatedAt(() => value);
        }

        public OrderBuilder WithCreatedAt(System.Func<System.DateTime> func)
        {
            CreatedAt = new System.Lazy<System.DateTime>(func);
            return this;
        }

        public OrderBuilder WithoutCreatedAt()
        {
            CreatedAt = new System.Lazy<System.DateTime>(() => default(System.DateTime));
            return this;
        }

        public OrderBuilder WithCreatedBy(string value)
        {
            return WithCreatedBy(() => value);
        }

        public OrderBuilder WithCreatedBy(System.Func<string> func)
        {
            CreatedBy = new System.Lazy<string>(func);
            return this;
        }

        public OrderBuilder WithoutCreatedBy()
        {
            CreatedBy = new System.Lazy<string>(() => default(string));
            return this;
        }

        public OrderBuilder WithId(System.Guid value)
        {
            return WithId(() => value);
        }

        public OrderBuilder WithId(System.Func<System.Guid> func)
        {
            Id = new System.Lazy<System.Guid>(func);
            return this;
        }

        public OrderBuilder WithoutId()
        {
            Id = new System.Lazy<System.Guid>(() => default(System.Guid));
            return this;
        }

        public OrderBuilder WithInternalString(string value)
        {
            return WithInternalString(() => value);
        }

        public OrderBuilder WithInternalString(System.Func<string> func)
        {
            InternalString = new System.Lazy<string>(func);
            return this;
        }

        public OrderBuilder WithoutInternalString()
        {
            InternalString = new System.Lazy<string>(() => default(string));
            return this;
        }

        public OrderBuilder WithItems(System.Collections.Generic.ICollection<BuilderGenerator.IntegrationTests.Core.Models.Entities.OrderItem> value)
        {
            return WithItems(() => value);
        }

        public OrderBuilder WithItems(System.Func<System.Collections.Generic.ICollection<BuilderGenerator.IntegrationTests.Core.Models.Entities.OrderItem>> func)
        {
            Items = new System.Lazy<System.Collections.Generic.ICollection<BuilderGenerator.IntegrationTests.Core.Models.Entities.OrderItem>>(func);
            return this;
        }

        public OrderBuilder WithoutItems()
        {
            Items = new System.Lazy<System.Collections.Generic.ICollection<BuilderGenerator.IntegrationTests.Core.Models.Entities.OrderItem>>(() => default(System.Collections.Generic.ICollection<BuilderGenerator.IntegrationTests.Core.Models.Entities.OrderItem>));
            return this;
        }

        public OrderBuilder WithOrderDate(System.DateTime value)
        {
            return WithOrderDate(() => value);
        }

        public OrderBuilder WithOrderDate(System.Func<System.DateTime> func)
        {
            OrderDate = new System.Lazy<System.DateTime>(func);
            return this;
        }

        public OrderBuilder WithoutOrderDate()
        {
            OrderDate = new System.Lazy<System.DateTime>(() => default(System.DateTime));
            return this;
        }

        public OrderBuilder WithOrders(System.Collections.Generic.ICollection<BuilderGenerator.IntegrationTests.Core.Models.Entities.OrderItem> value)
        {
            return WithOrders(() => value);
        }

        public OrderBuilder WithOrders(System.Func<System.Collections.Generic.ICollection<BuilderGenerator.IntegrationTests.Core.Models.Entities.OrderItem>> func)
        {
            Orders = new System.Lazy<System.Collections.Generic.ICollection<BuilderGenerator.IntegrationTests.Core.Models.Entities.OrderItem>>(func);
            return this;
        }

        public OrderBuilder WithoutOrders()
        {
            Orders = new System.Lazy<System.Collections.Generic.ICollection<BuilderGenerator.IntegrationTests.Core.Models.Entities.OrderItem>>(() => default(System.Collections.Generic.ICollection<BuilderGenerator.IntegrationTests.Core.Models.Entities.OrderItem>));
            return this;
        }

        public OrderBuilder WithStatus(BuilderGenerator.IntegrationTests.Core.Models.Enums.OrderStatus value)
        {
            return WithStatus(() => value);
        }

        public OrderBuilder WithStatus(System.Func<BuilderGenerator.IntegrationTests.Core.Models.Enums.OrderStatus> func)
        {
            Status = new System.Lazy<BuilderGenerator.IntegrationTests.Core.Models.Enums.OrderStatus>(func);
            return this;
        }

        public OrderBuilder WithoutStatus()
        {
            Status = new System.Lazy<BuilderGenerator.IntegrationTests.Core.Models.Enums.OrderStatus>(() => default(BuilderGenerator.IntegrationTests.Core.Models.Enums.OrderStatus));
            return this;
        }

        public OrderBuilder WithUpdatedAt(System.DateTime value)
        {
            return WithUpdatedAt(() => value);
        }

        public OrderBuilder WithUpdatedAt(System.Func<System.DateTime> func)
        {
            UpdatedAt = new System.Lazy<System.DateTime>(func);
            return this;
        }

        public OrderBuilder WithoutUpdatedAt()
        {
            UpdatedAt = new System.Lazy<System.DateTime>(() => default(System.DateTime));
            return this;
        }

        public OrderBuilder WithUpdatedBy(string value)
        {
            return WithUpdatedBy(() => value);
        }

        public OrderBuilder WithUpdatedBy(System.Func<string> func)
        {
            UpdatedBy = new System.Lazy<string>(func);
            return this;
        }

        public OrderBuilder WithoutUpdatedBy()
        {
            UpdatedBy = new System.Lazy<string>(() => default(string));
            return this;
        }
    }
}
