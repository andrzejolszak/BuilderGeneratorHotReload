#nullable disable

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by BuilderGenerator at 2023-11-22T00:07:28 in 0.3338ms.
// </auto-generated>
//------------------------------------------------------------------------------
using System.CodeDom.Compiler;
using System;
using BuilderGenerator.IntegrationTests.Core.Models.Entities;

namespace BuilderGenerator.IntegrationTests.Net60.Builders
{
    public partial class OrderItemBuilder : BuilderGenerator.Builder<BuilderGenerator.IntegrationTests.Core.Models.Entities.OrderItem>
    {
        public System.Lazy<System.DateTime> CreatedAt = new System.Lazy<System.DateTime>(() => default(System.DateTime));
        public System.Lazy<string> CreatedBy = new System.Lazy<string>(() => default(string));
        public System.Lazy<System.Guid> Id = new System.Lazy<System.Guid>(() => default(System.Guid));
        public System.Lazy<System.Guid> ItemId = new System.Lazy<System.Guid>(() => default(System.Guid));
        public System.Lazy<decimal> Price = new System.Lazy<decimal>(() => default(decimal));
        public System.Lazy<int> Quantity = new System.Lazy<int>(() => default(int));
        public System.Lazy<System.DateTime> UpdatedAt = new System.Lazy<System.DateTime>(() => default(System.DateTime));
        public System.Lazy<string> UpdatedBy = new System.Lazy<string>(() => default(string));

        public override BuilderGenerator.IntegrationTests.Core.Models.Entities.OrderItem Build()
        {
            if (Object?.IsValueCreated != true)
            {
                Object = new System.Lazy<BuilderGenerator.IntegrationTests.Core.Models.Entities.OrderItem>(() =>
                {
                    var result = new BuilderGenerator.IntegrationTests.Core.Models.Entities.OrderItem
                    {
                        CreatedAt = CreatedAt.Value,
                        CreatedBy = CreatedBy.Value,
                        Id = Id.Value,
                        ItemId = ItemId.Value,
                        Price = Price.Value,
                        Quantity = Quantity.Value,
                        UpdatedAt = UpdatedAt.Value,
                        UpdatedBy = UpdatedBy.Value,
                    };

                    return result;
                });

                PostProcess(Object.Value);
            }

            return Object.Value;
        }

        public OrderItemBuilder WithCreatedAt(System.DateTime value)
        {
            return WithCreatedAt(() => value);
        }

        public OrderItemBuilder WithCreatedAt(System.Func<System.DateTime> func)
        {
            CreatedAt = new System.Lazy<System.DateTime>(func);
            return this;
        }

        public OrderItemBuilder WithoutCreatedAt()
        {
            CreatedAt = new System.Lazy<System.DateTime>(() => default(System.DateTime));
            return this;
        }

        public OrderItemBuilder WithCreatedBy(string value)
        {
            return WithCreatedBy(() => value);
        }

        public OrderItemBuilder WithCreatedBy(System.Func<string> func)
        {
            CreatedBy = new System.Lazy<string>(func);
            return this;
        }

        public OrderItemBuilder WithoutCreatedBy()
        {
            CreatedBy = new System.Lazy<string>(() => default(string));
            return this;
        }

        public OrderItemBuilder WithId(System.Guid value)
        {
            return WithId(() => value);
        }

        public OrderItemBuilder WithId(System.Func<System.Guid> func)
        {
            Id = new System.Lazy<System.Guid>(func);
            return this;
        }

        public OrderItemBuilder WithoutId()
        {
            Id = new System.Lazy<System.Guid>(() => default(System.Guid));
            return this;
        }

        public OrderItemBuilder WithItemId(System.Guid value)
        {
            return WithItemId(() => value);
        }

        public OrderItemBuilder WithItemId(System.Func<System.Guid> func)
        {
            ItemId = new System.Lazy<System.Guid>(func);
            return this;
        }

        public OrderItemBuilder WithoutItemId()
        {
            ItemId = new System.Lazy<System.Guid>(() => default(System.Guid));
            return this;
        }

        public OrderItemBuilder WithPrice(decimal value)
        {
            return WithPrice(() => value);
        }

        public OrderItemBuilder WithPrice(System.Func<decimal> func)
        {
            Price = new System.Lazy<decimal>(func);
            return this;
        }

        public OrderItemBuilder WithoutPrice()
        {
            Price = new System.Lazy<decimal>(() => default(decimal));
            return this;
        }

        public OrderItemBuilder WithQuantity(int value)
        {
            return WithQuantity(() => value);
        }

        public OrderItemBuilder WithQuantity(System.Func<int> func)
        {
            Quantity = new System.Lazy<int>(func);
            return this;
        }

        public OrderItemBuilder WithoutQuantity()
        {
            Quantity = new System.Lazy<int>(() => default(int));
            return this;
        }

        public OrderItemBuilder WithUpdatedAt(System.DateTime value)
        {
            return WithUpdatedAt(() => value);
        }

        public OrderItemBuilder WithUpdatedAt(System.Func<System.DateTime> func)
        {
            UpdatedAt = new System.Lazy<System.DateTime>(func);
            return this;
        }

        public OrderItemBuilder WithoutUpdatedAt()
        {
            UpdatedAt = new System.Lazy<System.DateTime>(() => default(System.DateTime));
            return this;
        }

        public OrderItemBuilder WithUpdatedBy(string value)
        {
            return WithUpdatedBy(() => value);
        }

        public OrderItemBuilder WithUpdatedBy(System.Func<string> func)
        {
            UpdatedBy = new System.Lazy<string>(func);
            return this;
        }

        public OrderItemBuilder WithoutUpdatedBy()
        {
            UpdatedBy = new System.Lazy<string>(() => default(string));
            return this;
        }
    }
}
